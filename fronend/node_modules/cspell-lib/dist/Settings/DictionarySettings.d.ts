import { DictionaryDefinition, DictionaryId, DictionaryDefinitionPreferred } from '@cspell/cspell-types';
export interface DictionaryDefinitionWithSource extends DictionaryDefinitionPreferred {
    /** The path to the config file that contains this dictionary definition */
    __source: string;
}
export declare type DefMapArrayItem = [string, DictionaryDefinitionPreferred];
/**
 * Combines the list of desired dictionaries with the list of dictionary
 * definitions. Order does not matter, but the number of leading `!` does.
 *
 * Excluding dictionaries.
 * - Adding `!` to a dictId will remove the dictionary.
 * - Adding `!!` will add it back.
 *
 * @param dictIds - dictionaries desired
 * @param defs - dictionary definitions
 * @returns map from dictIds to definitions
 */
export declare function filterDictDefsToLoad(dictIds: DictionaryId[], defs: DictionaryDefinition[]): DefMapArrayItem[];
export declare function normalizePathForDictDefs(defs: undefined, pathToSettingsFile: string): undefined;
export declare function normalizePathForDictDefs(defs: DictionaryDefinition[], pathToSettingsFile: string): DictionaryDefinitionWithSource[];
export declare function normalizePathForDictDefs(defs: DictionaryDefinition[] | undefined, pathToSettingsFile: string): DictionaryDefinitionWithSource[] | undefined;
export declare function normalizePathForDictDef(def: DictionaryDefinition, pathToSettingsFile: string): DictionaryDefinitionWithSource;
export declare function isDictionaryDefinitionWithSource(d: DictionaryDefinition | DictionaryDefinitionWithSource): d is DictionaryDefinitionWithSource;
