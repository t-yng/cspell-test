import { Glob, CSpellSettingsWithSourceTrace, ImportFileRef, PnPSettings } from '@cspell/cspell-types';
import { LoaderResult } from './pnpLoader';
import { URI } from 'vscode-uri';
export declare const sectionCSpell = "cSpell";
export declare const defaultFileName = "cspell.json";
export declare const ENV_CSPELL_GLOB_ROOT = "CSPELL_GLOB_ROOT";
export declare const defaultConfigFilenames: readonly string[];
declare type CSpellSettings = CSpellSettingsWithSourceTrace;
/**
 * normalizeSettings handles correcting all relative paths, anchoring globs, and importing other config files.
 * @param rawSettings - raw configuration settings
 * @param pathToSettingsFile - path to the source file of the configuration settings.
 */
declare function normalizeSettings(rawSettings: CSpellSettings, pathToSettingsFile: string, pnpSettings: PnPSettings): CSpellSettings;
export declare function readSettings(filename: string): CSpellSettings;
export declare function readSettings(filename: string, defaultValues: CSpellSettings): CSpellSettings;
export declare function readSettings(filename: string, relativeTo: string): CSpellSettings;
export declare function readSettings(filename: string, relativeTo: string, defaultValues: CSpellSettings): CSpellSettings;
export declare function searchForConfig(searchFrom: string | undefined, pnpSettings?: PnPSettings): Promise<CSpellSettings | undefined>;
export declare function loadConfig(file: string, pnpSettings?: PnPSettings): Promise<CSpellSettings>;
export declare function loadPnP(pnpSettings: PnPSettings, searchFrom: URI): Promise<LoaderResult>;
export declare function loadPnPSync(pnpSettings: PnPSettings, searchFrom: URI): LoaderResult;
export declare function readRawSettings(filename: string, relativeTo?: string): CSpellSettings;
/**
 *
 * @param filenames - settings files to read
 * @returns combined configuration
 * @deprecated
 */
export declare function readSettingsFiles(filenames: string[]): CSpellSettings;
export declare function mergeSettings(left: CSpellSettings, ...settings: CSpellSettings[]): CSpellSettings;
export declare function mergeInDocSettings(left: CSpellSettings, right: CSpellSettings): CSpellSettings;
export declare function calcOverrideSettings(settings: CSpellSettings, filename: string): CSpellSettings;
export declare function finalizeSettings(settings: CSpellSettings): CSpellSettings;
export declare function getGlobalSettings(): CSpellSettings;
export declare function getCachedFileSize(): number;
export declare function clearCachedSettingsFiles(): void;
export declare function checkFilenameMatchesGlob(filename: string, globs: Glob | Glob[]): boolean;
/**
 * Return a list of Setting Sources used to create this Setting.
 * @param settings the settings to search
 */
export declare function getSources(settings: CSpellSettings): CSpellSettings[];
export interface ImportFileRefWithError extends ImportFileRef {
    error: Error;
}
export declare function extractImportErrors(settings: CSpellSettings): ImportFileRefWithError[];
export declare const __testing__: {
    normalizeSettings: typeof normalizeSettings;
};
export {};
